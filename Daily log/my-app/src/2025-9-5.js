handleSubmit について

フォーム送信時に「入力チェック（バリデーション）」をしてから onSubmit を呼び出す役割がある。

バリデーションが必要な理由

データを正しくするため

ユーザーに優しい（すぐにエラーがわかる）

サーバーの負担を減らす

セキュリティ対策

    < input {...register("product", { required: "商品名は空にできません" }) } /> の意味

入力欄をフォームに登録して、空だったら「商品名は空にできません」とエラーを出す。

type = "test" は間違いで、本当は type = "text"。

console.log('watch:product', watch('product')) の意味

'watch:product' はラベル（ただの文字）

watch('product') は入力欄の今の値

つまり「どの値なのか分かるように名前をつけて、中身を表示している」

React の useEffect について

コンポーネントが表示・更新・削除されたときに動かしたい処理を書くためのフック。

依存配列を使うと「いつ実行するか」をコントロールできる。

クリーンアップ（片付け処理）も書ける